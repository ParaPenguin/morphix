<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>uk.hfox.morphix</groupId>
    <artifactId>morphix-parent</artifactId>
    <version>2.0</version>
    <packaging>pom</packaging>

    <name>Morphix Parent</name>
    <description>Parent project containing Morphix libraries</description>
    <url>https://github.com/hfoxy/Morphix</url>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <distributionManagement>
        <repository>
            <id>zither-releases</id>
            <url>http://zither/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>zither-snapshots</id>
            <url>http://zither/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <scm>
        <url>https://github.com/hfoxy/Morphix</url>
        <connection>scm:git:git://github.com/hfoxy/Morphix.git</connection>
        <developerConnection>scm:git:git@github.com:hfoxy/Morphix.git</developerConnection>
    </scm>

    <developers>
        <developer>
            <name>Harry Fox</name>
            <email>harry.fox.ic@icloud.com</email>
            <url>https://github.com/hfoxy</url>
            <id>hfoxy</id>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.inceptionYear>2017</project.inceptionYear>
        <project.organizationName>Harry Fox</project.organizationName>
    </properties>

    <modules>
        <module>morphix-api</module>
        <module>morphix-mongo</module>
        <module>morphix-postgresql</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.0.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.0.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.7.9</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19</version>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>1.0.2</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>aggregate</id>
                        <goals>
                            <goal>aggregate</goal>
                        </goals>
                        <phase>site</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.9</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>1.14</version>
                <configuration>
                    <licenseName>morphix</licenseName>
                    <licenseResolver>${project.baseUri}src/license</licenseResolver>
                    <force>true</force>
                    <canUpdateLicense>true</canUpdateLicense>
                    <canUpdateCopyright>true</canUpdateCopyright>
                    <roots>
                        <root>src/main/java</root>
                    </roots>
                    <includes>
                        <includes>**/*.java</includes>
                    </includes>
                    <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
                    <processStartTag>========================LICENSE_START========================</processStartTag>
                    <processEndTag>========================LICENSE_END========================</processEndTag>
                    <organizationName>Harry Fox</organizationName>
                </configuration>
                <executions>
                    <execution>
                        <id>license-management</id>
                        <goals>
                            <goal>update-file-header</goal>
                            <goal>update-project-license</goal>
                            <goal>add-third-party</goal>
                        </goals>
                        <phase>process-sources</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.0.0</version>
                <reportSets>
                    <reportSet>
                        <!-- Exports JavaDocs to regular HTML files -->
                        <id>javadoc-html</id>
                        <reports>
                            <report>javadoc</report>
                        </reports>
                        <configuration>
                            <encoding>UTF-8</encoding>
                        </configuration>
                    </reportSet>

                    <reportSet>
                        <!-- Generates the JavaDoc coverage report -->
                        <id>javadoc-coverage</id>
                        <reports>
                            <report>javadoc</report>
                        </reports>
                        <configuration>
                            <name>JavaDoc Coverage</name>
                            <description>Percentage of the code coverage by JavaDoc documentation.</description>
                            <encoding>UTF-8</encoding>
                            <doclet>com.manoelcampos.javadoc.coverage.CoverageDoclet</doclet>
                            <docletArtifact>
                                <groupId>com.manoelcampos</groupId>
                                <artifactId>javadoc-coverage</artifactId>
                                <version>1.1.0</version>
                            </docletArtifact>
                            <destDir>javadoc-coverage</destDir>
                            <!-- You can also use -o instead of -outputName to define
                            the name of the generated report. -->
                            <additionalparam>-outputName "index.html"</additionalparam>
                        </configuration>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
</project>
